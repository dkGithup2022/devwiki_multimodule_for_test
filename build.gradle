plugins { // 프로젝트에서 사용하는 그레이들 플러그인 정의
    id 'org.springframework.boot' version '3.2.4' apply false
    id 'java'
    id 'io.spring.dependency-management' version '1.1.4'
}


ext {
    springBootVersion = '3.2.4'
}

allprojects { // 모든 프로젝트에 반영되는 부분
    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

}

def javaProjects = [ // Java 로 작성된 소스코드에 대한 공통작업 선언
                     //service
                     project(":app-async-batch"),
                     project(":app-es-syncbatch"),
                     project(":app-search-api"),
                     project(":app-web-api"),

                     // client
                     project(":client-redis"),
                     project(":client-feign"),
                     project(":client-mysql"),

                    //domain
                     project(":domain-article"),
                     project(":domain-bookmark"),
                     project(":domain-comment"),
                     project(":domain-popularity"),
                     project(":domain-reaction"),
                     project(":domain-user"),

                    //infra
                     project(":infra-article"),
                     project(":infra-bookmark"),
                     project(":infra-comment"),
                     project(":infra-popularity"),
                     project(":infra-reaction"),
                     project(":infra-user"),


                    //async task
                     project(":redis-async-consumer"),
                     project(":redis-async-provider")
]
configure(javaProjects) {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    group = "${projectGroup}"
    version = "${projectVersion}-${new Date().format('yyyyMMddHHmmss')}"

    dependencies {
        compileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")
        implementation("org.springframework.boot:spring-boot-starter-logging")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }
    tasks.withType(JavaCompile){
        options.encoding = 'UTF-8'
    }
}

